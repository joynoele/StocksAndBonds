// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.IO;
using System.Linq;
using Microsoft.ML;
using StocksAndBondsML.Model;

namespace StocksAndBondsML.ConsoleApp
{
    class Program
    {
        //Dataset to use for predictions 
        private const string DATA_FILEPATH = @"C:\tmp\StockPriceSimulation_2020_04_13.csv";

        static void Main(string[] args)
        {
            string isQuit;

            do
            {
                // Create single instance of sample data from first line of dataset for model input
                ModelInput sampleData = CreateSingleDataSample(DATA_FILEPATH);

                // Make a single prediction on the sample data and print results
                var predictionResult = ConsumeModel.Predict(sampleData);

                Console.WriteLine("Using model to make single prediction -- Comparing actual Rateofreturn with predicted Rateofreturn from sample data...\n\n");
                Console.WriteLine($"security: {sampleData.Security}");
                Console.WriteLine($"year: {sampleData.Year}");
                Console.WriteLine($"price: {sampleData.Price}");
                Console.WriteLine($"delta: {sampleData.Delta}");
                Console.WriteLine($"isSplit: {sampleData.IsSplit}");
                Console.WriteLine($"yield: {sampleData.Yield}");
                Console.WriteLine($"return: {sampleData.Return}");
                Console.WriteLine($"\n\nActual Rateofreturn: {sampleData.Rateofreturn} \nPredicted Rateofreturn: {predictionResult.Score}\n\n");
                Console.WriteLine("=============== End of process, hit any key to finish ===============");
                isQuit = Console.ReadKey().ToString();
            } while (string.IsNullOrEmpty(isQuit));
        }

        // Change this code to create your own sample data
        #region CreateSingleDataSample
        // Method to load single row of dataset to try a single prediction
        private static ModelInput CreateSingleDataSample(string dataFilePath)
        {
            // Create MLContext
            MLContext mlContext = new MLContext();

            // Load dataset
            IDataView dataView = mlContext.Data.LoadFromTextFile<ModelInput>(
                                            path: dataFilePath,
                                            hasHeader: true,
                                            separatorChar: ',',
                                            allowQuoting: true,
                                            allowSparse: false);
            Random r = new Random();
            var skip = r.Next(1, 10000);
            Console.WriteLine($"Skip {skip} rows");

            // Use first line of dataset as model input
            // You can replace this with new test data (hardcoded or from end-user application)
            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false).Skip(skip).Take(1).First();
            return sampleForPrediction;
        }
        #endregion
    }
}
